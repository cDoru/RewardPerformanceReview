// <auto-generated />
using DemoApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace DemoApi.Data.Migrations
{
    [DbContext(typeof(PerformanceReviewContext))]
    [Migration("20171101155950_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoApi.Data.Entiity.AssignedReviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreTime");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("PerformanceReviewId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PerformanceReviewId");

                    b.ToTable("AssignedReviewers");
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreTime");

                    b.Property<bool>("IsAdmin");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.EmployeeReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreTime");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("PerformanceReviewId");

                    b.HasKey("Id");

                    b.ToTable("EmployeeReviews");
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreTime");

                    b.Property<int>("EmployeeId");

                    b.Property<DateTime>("ModTime");

                    b.Property<int>("PerformanceReviewId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PerformanceReviewId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.PerformanceReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreTime");

                    b.Property<int>("EmployeeReviewId");

                    b.Property<int?>("EmployeeReviewId1");

                    b.Property<DateTime>("ModTime");

                    b.Property<string>("ReviewBody");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeReviewId1");

                    b.ToTable("PerformanceReviews");
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.AssignedReviewer", b =>
                {
                    b.HasOne("DemoApi.Data.Entiity.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoApi.Data.Entiity.PerformanceReview", "PerformanceReview")
                        .WithMany()
                        .HasForeignKey("PerformanceReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.Feedback", b =>
                {
                    b.HasOne("DemoApi.Data.Entiity.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DemoApi.Data.Entiity.PerformanceReview", "PerformanceReview")
                        .WithMany()
                        .HasForeignKey("PerformanceReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DemoApi.Data.Entiity.PerformanceReview", b =>
                {
                    b.HasOne("DemoApi.Data.Entiity.EmployeeReview", "EmployeeReview")
                        .WithMany()
                        .HasForeignKey("EmployeeReviewId1");
                });
#pragma warning restore 612, 618
        }
    }
}
